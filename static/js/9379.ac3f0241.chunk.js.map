{"version":3,"file":"static/js/9379.ac3f0241.chunk.js","mappings":"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","sources":["../node_modules/eth-provider/node_modules/uuid/lib/bytesToUuid.js","../node_modules/eth-provider/provider/index.js","../node_modules/eth-provider/connections/injected.js","../node_modules/eth-provider/presets/index.js","../node_modules/eth-provider/browser.js","../node_modules/@web3-react/frame-connector/src/index.ts","../node_modules/eth-provider/node_modules/uuid/v4.js","../node_modules/eth-provider/ConnectionManager/index.js","../node_modules/eth-provider/node_modules/uuid/lib/rng-browser.js","../node_modules/eth-provider/connections/ws.js","../node_modules/eth-provider/connections/unavailable.js","../node_modules/eth-provider/resolve/index.js","../node_modules/eth-provider/connections/http.js","../node_modules/ethereum-provider/index.js","../node_modules/eth-provider/parse/index.js"],"sourcesContent":["/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n  return ([bth[buf[i++]], bth[buf[i++]], \n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]]]).join('');\n}\n\nmodule.exports = bytesToUuid;\n","const EventEmitter = require('events')\nconst EthereumProvider = require('ethereum-provider')\nconst ConnectionManager = require('../ConnectionManager')\n\nconst monitor = provider => {\n  function update (status) {\n    provider.status = status\n    if (provider instanceof EventEmitter) provider.emit('status', status)\n  }\n  async function check () {\n    if (provider.inSetup) return setTimeout(check, 1000)\n    try {\n      if (await provider.send('eth_syncing')) {\n        update('syncing')\n        setTimeout(() => check(), 5000)\n      } else {\n        update('connected')\n      }\n    } catch (e) {\n      update('disconnected')\n    }\n  }\n  update('loading')\n  check()\n  provider.on('connect', () => check())\n  provider.on('close', () => update('disconnected'))\n  return provider\n}\n\nmodule.exports = (connections, targets, options) => {\n  // If window.ethereum and injected is a target in any priority, return ethereum provider\n  if (connections.injected.__isProvider && targets.map(t => t.type).indexOf('injected') > -1) {\n    delete connections.injected.__isProvider\n    return monitor(connections.injected)\n  }\n  const provider = new EthereumProvider(new ConnectionManager(connections, targets, options))\n  provider.setMaxListeners(128)\n  return monitor(provider)\n}\n","const EventEmitter = require('events')\n\nclass InjectedConnection extends EventEmitter {\n  constructor (_injected, options) {\n    super()\n    if (_injected) {\n      setTimeout(() => this.emit('error', new Error('Injected web3 provider is not currently supported')), 0)\n    } else {\n      setTimeout(() => this.emit('error', new Error('No injected provider found')), 0)\n    }\n  }\n}\n\nmodule.exports = injected => options => new InjectedConnection(injected, options)\n","module.exports = {\n  injected: ['injected'],\n  frame: ['ws://127.0.0.1:1248', 'http://127.0.0.1:1248'],\n  direct: ['ws://127.0.0.1:8546', 'http://127.0.0.1:8545'], // IPC paths will be prepended in Node/Electron\n  infura: ['wss://mainnet.infura.io/ws/v3/786ade30f36244469480aa5c2bf0743b', 'https://mainnet.infura.io/v3/786ade30f36244469480aa5c2bf0743b'],\n  infuraRopsten: ['wss://ropsten.infura.io/ws/v3/786ade30f36244469480aa5c2bf0743b', 'https://ropsten.infura.io/v3/786ade30f36244469480aa5c2bf0743b'],\n  infuraRinkeby: ['wss://rinkeby.infura.io/ws/v3/786ade30f36244469480aa5c2bf0743b', 'https://rinkeby.infura.io/v3/786ade30f36244469480aa5c2bf0743b'],\n  infuraKovan: ['wss://kovan.infura.io/ws/v3/786ade30f36244469480aa5c2bf0743b', 'https://kovan.infura.io/v3/786ade30f36244469480aa5c2bf0743b']\n}\n","const resolve = require('./resolve')\nconst provider = require('./provider')\nconst presets = require('./presets')\n\nconst injected = {\n  ethereum: typeof window !== 'undefined' && typeof window.ethereum !== 'undefined' ? window.ethereum : null,\n  web3: typeof window !== 'undefined' && typeof window.web3 !== 'undefined' ? window.web3.currentProvider : null\n}\nconst ws = typeof window !== 'undefined' && typeof window.WebSocket !== 'undefined' ? window.WebSocket : null\nconst XHR = typeof window !== 'undefined' && typeof window.XMLHttpRequest !== 'undefined' ? window.XMLHttpRequest : null\n\nif (injected.ethereum) injected.ethereum.__isProvider = true\n\nconst connections = {\n  injected: injected.ethereum || require('./connections/injected')(injected.web3),\n  ipc: require('./connections/unavailable')('IPC connections are unavliable in the browser'),\n  ws: require('./connections/ws')(ws),\n  http: require('./connections/http')(XHR)\n}\n\nmodule.exports = (targets = ['injected', 'frame'], options = {}) => provider(connections, resolve(targets, presets), options)\n","import { AbstractConnectorArguments, ConnectorUpdate } from '@web3-react/types'\nimport { AbstractConnector } from '@web3-react/abstract-connector'\nimport ethProvider from 'eth-provider'\nimport invariant from 'tiny-invariant'\n\nexport class UserRejectedRequestError extends Error {\n  public constructor() {\n    super()\n    this.name = this.constructor.name\n    this.message = 'The user rejected the request.'\n  }\n}\n\nexport class FrameConnector extends AbstractConnector {\n  private provider: any\n\n  constructor(kwargs: Required<AbstractConnectorArguments>) {\n    invariant(kwargs.supportedChainIds.length === 1, 'This connector only supports 1 chainId at the moment.')\n    super(kwargs)\n\n    this.handleNetworkChanged = this.handleNetworkChanged.bind(this)\n    this.handleChainChanged = this.handleChainChanged.bind(this)\n    this.handleAccountsChanged = this.handleAccountsChanged.bind(this)\n    this.handleClose = this.handleClose.bind(this)\n  }\n\n  private handleNetworkChanged(networkId: string): void {\n    if (__DEV__) {\n      console.log(\"Handling 'networkChanged' event with payload\", networkId)\n    }\n    this.emitUpdate({ provider: this.provider, chainId: networkId })\n  }\n\n  private handleChainChanged(chainId: string): void {\n    if (__DEV__) {\n      console.log(\"Handling 'chainChanged' event with payload\", chainId)\n    }\n    this.emitUpdate({ chainId })\n  }\n\n  private handleAccountsChanged(accounts: string[]): void {\n    if (__DEV__) {\n      console.log(\"Handling 'accountsChanged' event with payload\", accounts)\n    }\n    this.emitUpdate({ account: accounts.length === 0 ? null : accounts[0] })\n  }\n\n  private handleClose(code: number, reason: string): void {\n    if (__DEV__) {\n      console.log(\"Handling 'close' event with payload\", code, reason)\n    }\n    this.emitDeactivate()\n  }\n\n  public async activate(): Promise<ConnectorUpdate> {\n    if (!this.provider) {\n      this.provider = ethProvider('frame')\n    }\n\n    this.provider\n      .on('networkChanged', this.handleNetworkChanged)\n      .on('chainChanged', this.handleChainChanged)\n      .on('accountsChanged', this.handleAccountsChanged)\n      .on('close', this.handleClose)\n\n    const account = await this.provider\n      .enable()\n      .then((accounts: string[]): string => accounts[0])\n      .catch((error: Error): void => {\n        if (error && (error as any).code === 4001) {\n          throw new UserRejectedRequestError()\n        } else {\n          throw error\n        }\n      })\n\n    return { provider: this.provider, account }\n  }\n\n  public async getProvider(): Promise<any> {\n    return this.provider\n  }\n\n  public async getChainId(): Promise<number> {\n    return this.provider.send('eth_chainId')\n  }\n\n  public async getAccount(): Promise<null> {\n    return this.provider.send('eth_accounts').then((accounts: string[]): string => accounts[0])\n  }\n\n  public deactivate() {\n    this.provider\n      .removeListener('networkChanged', this.handleNetworkChanged)\n      .removeListener('chainChanged', this.handleChainChanged)\n      .removeListener('accountsChanged', this.handleAccountsChanged)\n      .removeListener('close', this.handleClose)\n  }\n}\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n","const EventEmitter = require('events')\n\nconst dev = process.env.NODE_ENV === 'development'\n\nclass ConnectionManager extends EventEmitter {\n  constructor (connections, targets, options) {\n    super()\n    this.targets = targets\n    this.connections = connections\n    this.connected = false\n    this.status = 'loading'\n    this.interval = options.interval || 5000\n    this.name = options.name || 'default'\n    this.inSetup = true\n    this.connect()\n  }\n\n  connect (index = 0) {\n    if (dev && index === 0) console.log(`\\n\\n\\n\\nA connection cycle started for provider with name: ${this.name}`)\n\n    if (this.connection && this.connection.status === 'connected' && index >= this.connection.index) {\n      if (dev) console.log('Stopping connection cycle becasuse we\\'re already connected to a higher priority provider')\n    } else if (this.targets.length === 0) {\n      if (dev) console.log('No valid targets supplied')\n    } else {\n      const { protocol, location } = this.targets[index]\n      this.connection = this.connections[protocol](location)\n\n      this.connection.on('error', err => {\n        if (!this.connected) return this.connectionError(index, err)\n        if (this.listenerCount('error')) return this.emit('error', err)\n        console.warn('eth-provider - Uncaught connection error: ' + err.message)\n      })\n\n      this.connection.on('close', (summary) => {\n        this.connected = false\n        this.emit('close')\n        if (!this.closing) this.refresh()\n      })\n\n      this.connection.on('connect', () => {\n        this.connection.target = this.targets[index]\n        this.connection.index = index\n        this.targets[index].status = this.connection.status\n        this.connected = true\n        this.inSetup = false\n        if (dev) console.log('Successfully connected to: ' + this.targets[index].location)\n        this.emit('connect')\n      })\n\n      this.connection.on('data', data => this.emit('data', data))\n      this.connection.on('payload', payload => this.emit('payload', payload))\n    }\n  }\n\n  refresh (interval = this.interval) {\n    if (dev) console.log(`Reconnect queued for ${(interval / 1000).toFixed(2)}s in the future`)\n    clearTimeout(this.connectTimer)\n    this.connectTimer = setTimeout(() => this.connect(), interval)\n  }\n\n  connectionError (index, err) {\n    this.targets[index].status = err\n    if (this.targets.length - 1 === index) {\n      this.inSetup = false\n      if (dev) console.warn('eth-provider unable to connect to any targets, view connection cycle summary: ', this.targets)\n      this.refresh()\n    } else { // Not last target, move on the next connection option\n      this.connect(++index)\n    }\n  }\n\n  close () {\n    this.closing = true\n    if (this.connection) {\n      this.connection.close() // Let event bubble from here\n    } else {\n      this.emit('close')\n    }\n    clearTimeout(this.connectTimer)\n  }\n\n  error (payload, message, code = -1) {\n    this.emit('payload', { id: payload.id, jsonrpc: payload.jsonrpc, error: { message, code } })\n  }\n\n  send (payload) {\n    if (this.inSetup) {\n      setTimeout(() => this.send(payload), 100)\n    } else if (this.connection.closed) {\n      this.error(payload, 'Not connected')\n    } else {\n      this.connection.send(payload)\n    }\n  }\n}\n\nmodule.exports = ConnectionManager\n","// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\n\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto\n// implementation. Also, find the complete implementation of crypto on IE11.\nvar getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto)) ||\n                      (typeof(msCrypto) != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto));\n\nif (getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\n  module.exports = function whatwgRNG() {\n    getRandomValues(rnds8);\n    return rnds8;\n  };\n} else {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var rnds = new Array(16);\n\n  module.exports = function mathRNG() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n","const EventEmitter = require('events')\nconst parse = require('../parse')\nconst dev = process.env.NODE_ENV === 'development'\n\nlet WebSocket\n\nclass WebSocketConnection extends EventEmitter {\n  constructor (_WebSocket, url, options) {\n    super()\n    WebSocket = _WebSocket\n    setTimeout(() => this.create(url, options), 0)\n  }\n\n  create (url, options) {\n    if (!WebSocket) this.emit('error', new Error('No WebSocket transport available'))\n    try { this.socket = new WebSocket(url) } catch (e) { return this.emit('error', e) }\n    this.socket.addEventListener('error', err => this.emit('error', err))\n    this.socket.addEventListener('open', () => {\n      this.emit('connect')\n      this.socket.addEventListener('message', message => {\n        const data = typeof message.data === 'string' ? message.data : ''\n        parse(data, (err, payloads) => {\n          if (err) return //\n          payloads.forEach(load => {\n            if (Array.isArray(load)) {\n              load.forEach(payload => this.emit('payload', payload))\n            } else {\n              this.emit('payload', load)\n            }\n          })\n        })\n      })\n      this.socket.addEventListener('close', () => this.onClose())\n    })\n  }\n\n  onClose () {\n    this.socket = null\n    this.closed = true\n    if (dev) console.log('Closing WebSocket connection')\n    this.emit('close')\n    this.removeAllListeners()\n  }\n\n  close () {\n    if (this.socket) {\n      this.socket.close()\n    } else {\n      this.onClose()\n    }\n  }\n\n  error (payload, message, code = -1) {\n    this.emit('payload', { id: payload.id, jsonrpc: payload.jsonrpc, error: { message, code } })\n  }\n\n  send (payload) {\n    if (this.socket && this.socket.readyState === this.socket.CONNECTING) {\n      setTimeout(_ => this.send(payload), 10)\n    } else if (!this.socket || this.socket.readyState > 1) {\n      this.connected = false\n      this.error(payload, 'Not connected')\n    } else {\n      this.socket.send(JSON.stringify(payload))\n    }\n  }\n}\n\nmodule.exports = WebSocket => (url, cb) => new WebSocketConnection(WebSocket, url, cb)\n","const EventEmitter = require('events')\n\nclass UnavailableConnection extends EventEmitter {\n  constructor (message) {\n    super()\n    setTimeout(() => this.emit('error', new Error(message)), 0)\n  }\n}\n\nmodule.exports = message => () => new UnavailableConnection(message)\n","const getProtocol = location => {\n  if (location === 'injected') return 'injected'\n  if (location.endsWith('.ipc')) return 'ipc'\n  if (location.startsWith('wss://') || location.startsWith('ws://')) return 'ws'\n  if (location.startsWith('https://') || location.startsWith('http://')) return 'http'\n  return ''\n}\n\nmodule.exports = (targets, presets) => {\n  return [].concat(...[].concat(targets).map(provider => {\n    if (presets[provider]) {\n      return presets[provider].map(location => ({ type: provider, location, protocol: getProtocol(location) }))\n    } else {\n      return { type: 'custom', location: provider, protocol: getProtocol(provider) }\n    }\n  })).filter(provider => {\n    if (provider.protocol || provider.type === 'injected') {\n      return true\n    } else {\n      console.log('eth-provider | Invalid provider preset/location: \"' + provider.location + '\"')\n      return false\n    }\n  })\n}\n","const EventEmitter = require('events')\nconst uuid = require('uuid/v4')\n\nconst dev = process.env.NODE_ENV === 'development'\n\nlet XHR\n\nclass HTTPConnection extends EventEmitter {\n  constructor (_XHR, url, options) {\n    super()\n    XHR = _XHR\n    this.connected = false\n    this.subscriptions = false\n    this.status = 'loading'\n    this.url = url\n    this.pollId = uuid()\n    setTimeout(() => this.create(), 0)\n  }\n\n  create () {\n    if (!XHR) return this.emit('error', new Error('No HTTP transport available'))\n    this.on('error', () => { if (this.connected) this.close() })\n    this.init()\n  }\n\n  init () {\n    this.send({ jsonrpc: '2.0', method: 'eth_syncing', params: [], id: 1 }, (err, response) => {\n      if (err) return this.emit('error', err)\n      this.send({ jsonrpc: '2.0', id: 1, method: 'eth_pollSubscriptions', params: [this.pollId, 'immediate'] }, (err, response) => {\n        if (!err) {\n          this.subscriptions = true\n          this.pollSubscriptions()\n        }\n        this.connected = true\n        this.emit('connect')\n      })\n    })\n  }\n\n  pollSubscriptions () {\n    this.send({ jsonrpc: '2.0', id: 1, method: 'eth_pollSubscriptions', params: [this.pollId] }, (err, result) => {\n      if (err) {\n        this.subscriptionTimeout = setTimeout(() => this.pollSubscriptions(), 10000)\n        return this.emit('error', err)\n      } else {\n        if (!this.closed) this.subscriptionTimeout = this.pollSubscriptions()\n        if (result) {\n          result.map(p => {\n            let parse\n            try { parse = JSON.parse(p) } catch (e) { parse = false }\n            return parse\n          }).filter(n => n).forEach(p => this.emit('payload', p))\n        }\n      }\n    })\n  }\n\n  close () {\n    if (dev) console.log('Closing HTTP connection')\n    this.closed = true\n    this.emit('close')\n    clearTimeout(this.subscriptionTimeout)\n    this.removeAllListeners()\n  }\n\n  filterStatus (res) {\n    if (res.status >= 200 && res.status < 300) return res\n    const error = new Error(res.statusText)\n    error.res = res\n    throw error.message\n  }\n\n  error (payload, message, code = -1) {\n    this.emit('payload', { id: payload.id, jsonrpc: payload.jsonrpc, error: { message, code } })\n  }\n\n  send (payload, internal) {\n    if (this.closed) return this.error(payload, 'Not connected')\n    if (payload.method === 'eth_subscribe') {\n      if (this.subscriptions) {\n        payload.pollId = this.pollId\n      } else {\n        return this.error(payload, 'Subscriptions are not supported by this HTTP endpoint')\n      }\n    }\n    const xhr = new XHR()\n    let responded = false\n    const res = (err, result) => {\n      if (!responded) {\n        xhr.abort()\n        responded = true\n        if (internal) {\n          internal(err, result)\n        } else {\n          const { id, jsonrpc } = payload\n          const load = err ? { id, jsonrpc, error: { message: err.message, code: err.code } } : { id, jsonrpc, result }\n          this.emit('payload', load)\n        }\n      }\n    }\n    xhr.open('POST', this.url, true)\n    xhr.setRequestHeader('Content-Type', 'application/json')\n    xhr.timeout = 60 * 1000\n    xhr.onerror = res\n    xhr.ontimeout = res\n    xhr.onreadystatechange = () => {\n      if (xhr.readyState === 4) {\n        try {\n          const response = JSON.parse(xhr.responseText)\n          res(response.error, response.result)\n        } catch (e) {\n          res(e)\n        }\n      }\n    }\n    xhr.send(JSON.stringify(payload))\n  }\n}\n\nmodule.exports = XHR => (url, options) => new HTTPConnection(XHR, url, options)\n","const EventEmitter = require('events')\n\nclass EthereumProvider extends EventEmitter {\n  constructor (connection) {\n    super()\n    this.connected = false\n    this.nextId = 0\n    this.promises = {}\n    this.subscriptions = []\n    this.connection = connection\n    this.connection.on('connect', () => this.checkConnection())\n    this.connection.on('close', () => this.emit('close'))\n    this.connection.on('payload', payload => {\n      const { id, method, error, result } = payload\n      if (typeof id !== 'undefined') {\n        if (this.promises[id]) { // Fulfill promise\n          payload.error ? this.promises[id].reject(error) : this.promises[id].resolve(result)\n          delete this.promises[id]\n        }\n      } else if (method && method.indexOf('_subscription') > -1) { // Emit subscription result\n        this.emit(payload.params.subscription, payload.params.result)\n        this.emit(method, payload.params) // Latest EIP-1193\n        this.emit('data', payload) // Backwards Compatibility\n      }\n    })\n    this.on('newListener', (event, listener) => {\n      if (event === 'networkChanged') {\n        if (!this.attemptedNetworkSubscription && this.connected) this.startNetworkSubscription()\n      } else if (event === 'accountsChanged') {\n        if (!this.attemptedAccountsSubscription && this.connected) this.startAccountsSubscription()\n      }\n    })\n  }\n  async checkConnection () {\n    try {\n      this.emit('connect', await this._send('net_version'))\n      this.connected = true\n      if (this.listenerCount('networkChanged') && !this.attemptedNetworkSubscription) this.startNetworkSubscription()\n      if (this.listenerCount('accountsChanged') && !this.attemptedAccountsSubscription) this.startAccountsSubscription()\n    } catch (e) {\n      this.connected = false\n    }\n  }\n  async startNetworkSubscription () {\n    this.attemptedNetworkSubscription = true\n    try {\n      let networkChanged = await this.subscribe('eth_subscribe', 'networkChanged')\n      this.on(networkChanged, netId => this.emit('networkChanged', netId))\n    } catch (e) {\n      console.warn('Unable to subscribe to networkChanged', e)\n    }\n  }\n  async startAccountsSubscription () {\n    this.attemptedAccountsSubscription = true\n    try {\n      let accountsChanged = await this.subscribe('eth_subscribe', 'accountsChanged')\n      this.on(accountsChanged, accounts => this.emit('accountsChanged', accounts))\n    } catch (e) {\n      console.warn('Unable to subscribe to accountsChanged', e)\n    }\n  }\n  enable () {\n    return new Promise((resolve, reject) => {\n      this._send('eth_accounts').then(accounts => {\n        if (accounts.length > 0) {\n          this.accounts = accounts\n          this.coinbase = accounts[0]\n          this.emit('enable')\n          resolve(accounts)\n        } else {\n          const err = new Error('User Denied Full Provider')\n          err.code = 4001\n          reject(err)\n        }\n      }).catch(reject)\n    })\n  }\n  _send (method, params = []) {\n    if (!method || typeof method !== 'string') return new Error('Method is not a valid string.')\n    if (!(params instanceof Array)) return new Error('Params is not a valid array.')\n    const payload = { jsonrpc: '2.0', id: this.nextId++, method, params }\n    const promise = new Promise((resolve, reject) => { this.promises[payload.id] = { resolve, reject } })\n    this.connection.send(payload)\n    return promise\n  }\n  send (...args) { // Send can be clobbered, proxy sendPromise for backwards compatibility\n    return this._send(...args)\n  }\n  _sendBatch (requests) {\n    return Promise.all(requests.map(payload => this._send(payload.method, payload.params)))\n  }\n  subscribe (type, method, params = []) {\n    return this._send(type, [method, ...params]).then(id => {\n      this.subscriptions.push(id)\n      return id\n    })\n  }\n  unsubscribe (type, id) {\n    return this._send(type, [id]).then(success => {\n      if (success) {\n        this.subscriptions = this.subscriptions.filter(_id => _id !== id) // Remove subscription\n        this.removeAllListeners(id) // Remove listeners\n        return success\n      }\n    })\n  }\n  sendAsync (payload, cb) { // Backwards Compatibility\n    if (!cb || typeof cb !== 'function') return cb(new Error('Invalid or undefined callback provided to sendAsync'))\n    if (!payload) return cb(new Error('Invalid Payload'))\n    // sendAsync can be called with an array for batch requests used by web3.js 0.x\n    // this is not part of EIP-1193's backwards compatibility but we still want to support it\n    if (payload instanceof Array) {\n      return this.sendAsyncBatch(payload, cb)\n    } else {\n      return this._send(payload.method, payload.params).then(result => {\n        cb(null, { id: payload.id, jsonrpc: payload.jsonrpc, result })\n      }).catch(err => {\n        cb(err)\n      })\n    }\n  }\n  sendAsyncBatch (payload, cb) {\n    return this._sendBatch(payload).then((results) => {\n      let result = results.map((entry, index) => {\n        return { id: payload[index].id, jsonrpc: payload[index].jsonrpc, result: entry }\n      })\n      cb(null, result)\n    }).catch(err => {\n      cb(err)\n    })\n  }\n  isConnected () { // Backwards Compatibility\n    return this.connected\n  }\n  close () {\n    this.connection.close()\n    this.connected = false\n    let error = new Error(`Provider closed, subscription lost, please subscribe again.`)\n    this.subscriptions.forEach(id => this.emit(id, error)) // Send Error objects to any open subscriptions\n    this.subscriptions = [] // Clear subscriptions\n  }\n}\n\nmodule.exports = EthereumProvider\n","let last, timeout\n\nmodule.exports = (res, cb) => {\n  const values = []\n  res\n    .replace(/\\}[\\n\\r]?\\{/g, '}|--|{') // }{\n    .replace(/\\}\\][\\n\\r]?\\[\\{/g, '}]|--|[{') // }][{\n    .replace(/\\}[\\n\\r]?\\[\\{/g, '}|--|[{') // }[{\n    .replace(/\\}\\][\\n\\r]?\\{/g, '}]|--|{') // }]{\n    .split('|--|')\n    .forEach(data => {\n      if (last) data = last + data // prepend the last chunk\n      let result\n      try {\n        result = JSON.parse(data)\n      } catch (e) {\n        last = data\n        clearTimeout(timeout) // restart timeout\n        timeout = setTimeout(() => cb(new Error('Parse response timeout')), 15 * 1000)\n        return\n      }\n      clearTimeout(timeout)\n      last = null\n      if (result) values.push(result)\n    })\n  cb(null, values)\n}\n"],"names":["byteToHex","i","toString","substr","module","exports","buf","offset","bth","join","EventEmitter","require","EthereumProvider","ConnectionManager","monitor","provider","update","status","emit","async","check","inSetup","setTimeout","send","e","on","connections","targets","options","injected","__isProvider","map","t","type","indexOf","setMaxListeners","InjectedConnection","constructor","_injected","super","this","Error","frame","direct","infura","infuraRopsten","infuraRinkeby","infuraKovan","resolve","presets","ethereum","window","web3","currentProvider","ws","WebSocket","XHR","XMLHttpRequest","ipc","http","arguments","length","undefined","UserRejectedRequestError","_Error","_this","call","name","message","_inheritsLoose","_wrapNativeSuper","FrameConnector","_AbstractConnector","kwargs","supportedChainIds","invariant","_this2","handleNetworkChanged","bind","_assertThisInitialized","handleChainChanged","handleAccountsChanged","handleClose","_proto","prototype","networkId","emitUpdate","chainId","accounts","account","code","reason","emitDeactivate","activate","_this4","ethProvider","enable","then","error","Promise","reject","getProvider","getChainId","getAccount","deactivate","removeListener","AbstractConnector","rng","bytesToUuid","Array","rnds","random","ii","dev","process","connected","interval","connect","index","connection","protocol","location","err","listenerCount","console","warn","connectionError","summary","closing","refresh","target","data","payload","clearTimeout","connectTimer","close","id","jsonrpc","closed","getRandomValues","crypto","msCrypto","rnds8","Uint8Array","r","Math","parse","WebSocketConnection","_WebSocket","url","create","socket","addEventListener","payloads","forEach","load","isArray","onClose","removeAllListeners","readyState","CONNECTING","_","JSON","stringify","cb","UnavailableConnection","getProtocol","endsWith","startsWith","concat","filter","log","uuid","HTTPConnection","_XHR","subscriptions","pollId","init","method","params","response","pollSubscriptions","result","subscriptionTimeout","p","n","filterStatus","res","statusText","internal","xhr","responded","abort","open","setRequestHeader","timeout","onerror","ontimeout","onreadystatechange","responseText","nextId","promises","checkConnection","subscription","event","listener","attemptedNetworkSubscription","startNetworkSubscription","attemptedAccountsSubscription","startAccountsSubscription","_send","networkChanged","subscribe","netId","accountsChanged","coinbase","catch","promise","_sendBatch","requests","all","push","unsubscribe","success","_id","sendAsync","sendAsyncBatch","results","entry","isConnected","last","values","replace","split"],"sourceRoot":""}