{"version":3,"file":"static/js/577.46b08124.chunk.js","mappings":"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","sources":["../node_modules/readable-stream/lib/_stream_duplex.js","../node_modules/core-util-is/lib/util.js","../node_modules/process-nextick-args/index.js","../node_modules/readable-stream/readable-browser.js","../node_modules/readable-stream/lib/internal/streams/destroy.js","../node_modules/readable-stream/lib/_stream_transform.js","../node_modules/isarray/index.js","../node_modules/readable-stream/lib/_stream_writable.js","../node_modules/readable-stream/lib/internal/streams/BufferList.js","../node_modules/readable-stream/node_modules/safe-buffer/index.js","../node_modules/readable-stream/lib/_stream_readable.js","../node_modules/readable-stream/lib/_stream_passthrough.js","../node_modules/readable-stream/lib/internal/streams/stream-browser.js"],"sourcesContent":["// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    keys.push(key);\n  }return keys;\n};\n/*</replacement>*/\n\nmodule.exports = Duplex;\n\n/*<replacement>*/\nvar util = Object.create(require('core-util-is'));\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar Readable = require('./_stream_readable');\nvar Writable = require('./_stream_writable');\n\nutil.inherits(Duplex, Readable);\n\n{\n  // avoid scope creep, the keys array can then be collected\n  var keys = objectKeys(Writable.prototype);\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n\n  Readable.call(this, options);\n  Writable.call(this, options);\n\n  if (options && options.readable === false) this.readable = false;\n\n  if (options && options.writable === false) this.writable = false;\n\n  this.allowHalfOpen = true;\n  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;\n\n  this.once('end', onend);\n}\n\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// the no-half-open enforcer\nfunction onend() {\n  // if we allow half-open state, or if the writable side ended,\n  // then we're ok.\n  if (this.allowHalfOpen || this._writableState.ended) return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  pna.nextTick(onEndNT, this);\n}\n\nfunction onEndNT(self) {\n  self.end();\n}\n\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});\n\nDuplex.prototype._destroy = function (err, cb) {\n  this.push(null);\n  this.end();\n\n  pna.nextTick(cb, err);\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\n\nfunction isArray(arg) {\n  if (Array.isArray) {\n    return Array.isArray(arg);\n  }\n  return objectToString(arg) === '[object Array]';\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('buffer').Buffer.isBuffer;\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n","'use strict';\n\nif (typeof process === 'undefined' ||\n    !process.version ||\n    process.version.indexOf('v0.') === 0 ||\n    process.version.indexOf('v1.') === 0 && process.version.indexOf('v1.8.') !== 0) {\n  module.exports = { nextTick: nextTick };\n} else {\n  module.exports = process\n}\n\nfunction nextTick(fn, arg1, arg2, arg3) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('\"callback\" argument must be a function');\n  }\n  var len = arguments.length;\n  var args, i;\n  switch (len) {\n  case 0:\n  case 1:\n    return process.nextTick(fn);\n  case 2:\n    return process.nextTick(function afterTickOne() {\n      fn.call(null, arg1);\n    });\n  case 3:\n    return process.nextTick(function afterTickTwo() {\n      fn.call(null, arg1, arg2);\n    });\n  case 4:\n    return process.nextTick(function afterTickThree() {\n      fn.call(null, arg1, arg2, arg3);\n    });\n  default:\n    args = new Array(len - 1);\n    i = 0;\n    while (i < args.length) {\n      args[i++] = arguments[i];\n    }\n    return process.nextTick(function afterTick() {\n      fn.apply(null, args);\n    });\n  }\n}\n\n","exports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = exports;\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\n","'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\n// undocumented cb() API, needed for core, not for public API\nfunction destroy(err, cb) {\n  var _this = this;\n\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err) {\n      if (!this._writableState) {\n        pna.nextTick(emitErrorNT, this, err);\n      } else if (!this._writableState.errorEmitted) {\n        this._writableState.errorEmitted = true;\n        pna.nextTick(emitErrorNT, this, err);\n      }\n    }\n\n    return this;\n  }\n\n  // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  }\n\n  // if this is a duplex stream mark the writable part as destroyed as well\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      if (!_this._writableState) {\n        pna.nextTick(emitErrorNT, _this, err);\n      } else if (!_this._writableState.errorEmitted) {\n        _this._writableState.errorEmitted = true;\n        pna.nextTick(emitErrorNT, _this, err);\n      }\n    } else if (cb) {\n      cb(err);\n    }\n  });\n\n  return this;\n}\n\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finalCalled = false;\n    this._writableState.prefinished = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\n\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\n\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n'use strict';\n\nmodule.exports = Transform;\n\nvar Duplex = require('./_stream_duplex');\n\n/*<replacement>*/\nvar util = Object.create(require('core-util-is'));\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(Transform, Duplex);\n\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n\n  var cb = ts.writecb;\n\n  if (!cb) {\n    return this.emit('error', new Error('write callback called multiple times'));\n  }\n\n  ts.writechunk = null;\n  ts.writecb = null;\n\n  if (data != null) // single equals check for both `null` and `undefined`\n    this.push(data);\n\n  cb(er);\n\n  var rs = this._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\n\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n\n  Duplex.call(this, options);\n\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  };\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  }\n\n  // When the writable side finishes, then flush out anything remaining.\n  this.on('prefinish', prefinish);\n}\n\nfunction prefinish() {\n  var _this = this;\n\n  if (typeof this._flush === 'function') {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\n\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  throw new Error('_transform() is not implemented');\n};\n\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n\n  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\nTransform.prototype._destroy = function (err, cb) {\n  var _this2 = this;\n\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n    _this2.emit('close');\n  });\n};\n\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n\n  if (data != null) // single equals check for both `null` and `undefined`\n    stream.push(data);\n\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  if (stream._writableState.length) throw new Error('Calling transform done when ws.length != 0');\n\n  if (stream._transformState.transforming) throw new Error('Calling transform done when still transforming');\n\n  return stream.push(null);\n}","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\nmodule.exports = Writable;\n\n/* <replacement> */\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n}\n\n// It seems a linked list but it is not\n// there will be only 2 of these for each stream\nfunction CorkedRequest(state) {\n  var _this = this;\n\n  this.next = null;\n  this.entry = null;\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\nvar asyncWrite = !process.browser && ['v0.10', 'v0.9.'].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : pna.nextTick;\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n/*<replacement>*/\nvar util = Object.create(require('core-util-is'));\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar internalUtil = {\n  deprecate: require('util-deprecate')\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\nvar OurUint8Array = (typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : typeof self !== 'undefined' ? self : {}).Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\nvar destroyImpl = require('./internal/streams/destroy');\n\nutil.inherits(Writable, Stream);\n\nfunction nop() {}\n\nfunction WritableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  var isDuplex = stream instanceof Duplex;\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  var hwm = options.highWaterMark;\n  var writableHwm = options.writableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (writableHwm || writableHwm === 0)) this.highWaterMark = writableHwm;else this.highWaterMark = defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // if _final has been called\n  this.finalCalled = false;\n\n  // drain event flag.\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null;\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n\n  // count buffered requests\n  this.bufferedRequestCount = 0;\n\n  // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\n\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n  return out;\n};\n\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function () {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})();\n\n// Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\nvar realHasInstance;\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function (object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function (object) {\n    return object instanceof this;\n  };\n}\n\nfunction Writable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n  if (!realHasInstance.call(Writable, this) && !(this instanceof Duplex)) {\n    return new Writable(options);\n  }\n\n  this._writableState = new WritableState(options, this);\n\n  // legacy.\n  this.writable = true;\n\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n\n    if (typeof options.writev === 'function') this._writev = options.writev;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function () {\n  this.emit('error', new Error('Cannot pipe, not readable'));\n};\n\nfunction writeAfterEnd(stream, cb) {\n  var er = new Error('write after end');\n  // TODO: defer error events consistently everywhere, not just the cb\n  stream.emit('error', er);\n  pna.nextTick(cb, er);\n}\n\n// Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\nfunction validChunk(stream, state, chunk, cb) {\n  var valid = true;\n  var er = false;\n\n  if (chunk === null) {\n    er = new TypeError('May not write null values to stream');\n  } else if (typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  if (er) {\n    stream.emit('error', er);\n    pna.nextTick(cb, er);\n    valid = false;\n  }\n  return valid;\n}\n\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n\n  if (typeof cb !== 'function') cb = nop;\n\n  if (state.ended) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n\n  return ret;\n};\n\nWritable.prototype.cork = function () {\n  var state = this._writableState;\n\n  state.corked++;\n};\n\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n\n    if (!state.writing && !state.corked && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n  return chunk;\n}\n\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n  var len = state.objectMode ? 1 : chunk.length;\n\n  state.length += len;\n\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret) state.needDrain = true;\n\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    pna.nextTick(cb, er);\n    // this can emit finish, and it will always happen\n    // after error\n    pna.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n    // this can emit finish, but finish must\n    // always follow error\n    finishMaybe(stream, state);\n  }\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n\n  onwriteStateUpdate(state);\n\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state);\n\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      /*<replacement>*/\n      asyncWrite(afterWrite, stream, state, finished, cb);\n      /*</replacement>*/\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n\n    var count = 0;\n    var allBuffers = true;\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n    buffer.allBuffers = allBuffers;\n\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish);\n\n    // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--;\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        break;\n      }\n    }\n\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new Error('_write() is not implemented'));\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending) endWritable(this, state, cb);\n};\n\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n    if (err) {\n      stream.emit('error', err);\n    }\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function') {\n      state.pendingcb++;\n      state.finalCalled = true;\n      pna.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n  if (need) {\n    prefinish(stream, state);\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n    }\n  }\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished) pna.nextTick(cb);else stream.once('finish', cb);\n  }\n  state.ended = true;\n  stream.writable = false;\n}\n\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  }\n\n  // reuse the free corkReq.\n  state.corkedRequestsFree.next = corkReq;\n}\n\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  get: function () {\n    if (this._writableState === undefined) {\n      return false;\n    }\n    return this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._writableState.destroyed = value;\n  }\n});\n\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\nWritable.prototype._destroy = function (err, cb) {\n  this.end();\n  cb(err);\n};","'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Buffer = require('safe-buffer').Buffer;\nvar util = require('util');\n\nfunction copyBuffer(src, target, offset) {\n  src.copy(target, offset);\n}\n\nmodule.exports = function () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n\n  BufferList.prototype.push = function push(v) {\n    var entry = { data: v, next: null };\n    if (this.length > 0) this.tail.next = entry;else this.head = entry;\n    this.tail = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.unshift = function unshift(v) {\n    var entry = { data: v, next: this.head };\n    if (this.length === 0) this.tail = entry;\n    this.head = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.shift = function shift() {\n    if (this.length === 0) return;\n    var ret = this.head.data;\n    if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n    --this.length;\n    return ret;\n  };\n\n  BufferList.prototype.clear = function clear() {\n    this.head = this.tail = null;\n    this.length = 0;\n  };\n\n  BufferList.prototype.join = function join(s) {\n    if (this.length === 0) return '';\n    var p = this.head;\n    var ret = '' + p.data;\n    while (p = p.next) {\n      ret += s + p.data;\n    }return ret;\n  };\n\n  BufferList.prototype.concat = function concat(n) {\n    if (this.length === 0) return Buffer.alloc(0);\n    var ret = Buffer.allocUnsafe(n >>> 0);\n    var p = this.head;\n    var i = 0;\n    while (p) {\n      copyBuffer(p.data, ret, i);\n      i += p.data.length;\n      p = p.next;\n    }\n    return ret;\n  };\n\n  return BufferList;\n}();\n\nif (util && util.inspect && util.inspect.custom) {\n  module.exports.prototype[util.inspect.custom] = function () {\n    var obj = util.inspect({ length: this.length });\n    return this.constructor.name + ' ' + obj;\n  };\n}","/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar isArray = require('isarray');\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\n/*<replacement>*/\nvar EE = require('events').EventEmitter;\n\nvar EElistenerCount = function (emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\nvar OurUint8Array = (typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : typeof self !== 'undefined' ? self : {}).Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\n/*<replacement>*/\nvar util = Object.create(require('core-util-is'));\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar debugUtil = require('util');\nvar debug = void 0;\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function () {};\n}\n/*</replacement>*/\n\nvar BufferList = require('./internal/streams/BufferList');\nvar destroyImpl = require('./internal/streams/destroy');\nvar StringDecoder;\n\nutil.inherits(Readable, Stream);\n\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\n\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn);\n\n  // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\n\nfunction ReadableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  var isDuplex = stream instanceof Duplex;\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  var hwm = options.highWaterMark;\n  var readableHwm = options.readableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (readableHwm || readableHwm === 0)) this.highWaterMark = readableHwm;else this.highWaterMark = defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  if (!(this instanceof Readable)) return new Readable(options);\n\n  this._readableState = new ReadableState(options, this);\n\n  // legacy\n  this.readable = true;\n\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n\n  Stream.call(this);\n}\n\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n  }\n});\n\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\nReadable.prototype._destroy = function (err, cb) {\n  this.push(null);\n  cb(err);\n};\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\n\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  var state = stream._readableState;\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n    if (er) {\n      stream.emit('error', er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n\n      if (addToFront) {\n        if (state.endEmitted) stream.emit('error', new Error('stream.unshift() after end event'));else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        stream.emit('error', new Error('stream.push() after EOF'));\n      } else {\n        state.reading = false;\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n    }\n  }\n\n  return needMoreData(state);\n}\n\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    stream.emit('data', chunk);\n    stream.read(0);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n\n    if (state.needReadable) emitReadable(stream);\n  }\n  maybeReadMore(stream, state);\n}\n\nfunction chunkInvalid(state, chunk) {\n  var er;\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  return er;\n}\n\n// if it's past the high water mark, we can push in some more.\n// Also, if we have no data yet, we can stand some\n// more bytes.  This is to work around cases where hwm=0,\n// such as the repl.  Also, if the push() triggered a\n// readable event, and the user called read(largeNumber) such that\n// needReadable was set, then we ought to push more, so that another\n// 'readable' event will be triggered.\nfunction needMoreData(state) {\n  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);\n}\n\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n};\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n  this._readableState.decoder = new StringDecoder(enc);\n  this._readableState.encoding = enc;\n  return this;\n};\n\n// Don't raise the hwm > 8MB\nvar MAX_HWM = 0x800000;\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  }\n  // If we're asking for more than the current hwm, then raise the hwm.\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n;\n  // Don't have enough\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n  return state.length;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n\n  if (n !== 0) state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0) state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n    // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n\n  if (ret === null) {\n    state.needReadable = true;\n    n = 0;\n  } else {\n    state.length -= n;\n  }\n\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true;\n\n    // If we tried to read() past the EOF, then emit end on the next tick.\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n\n  if (ret !== null) this.emit('data', ret);\n\n  return ret;\n};\n\nfunction onEofChunk(stream, state) {\n  if (state.ended) return;\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n\n  // emit 'readable' now to make sure it gets picked up.\n  emitReadable(stream);\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    if (state.sync) pna.nextTick(emitReadable_, stream);else emitReadable_(stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  debug('emit readable');\n  stream.emit('readable');\n  flow(stream);\n}\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    pna.nextTick(maybeReadMore_, stream, state);\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  var len = state.length;\n  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;else len = state.length;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function (n) {\n  this.emit('error', new Error('_read() is not implemented'));\n};\n\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) pna.nextTick(endFn);else src.once('end', endFn);\n\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n\n  var cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n\n    cleanedUp = true;\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n\n  // If the user pushes more data while we're writing to dest then we'll end up\n  // in ondata again. However, we only want to increase awaitDrain once because\n  // dest will only emit one 'drain' event for the multiple writes.\n  // => Introduce a guard on increasing awaitDrain.\n  var increasedAwaitDrain = false;\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    increasedAwaitDrain = false;\n    var ret = dest.write(chunk);\n    if (false === ret && !increasedAwaitDrain) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', state.awaitDrain);\n        state.awaitDrain++;\n        increasedAwaitDrain = true;\n      }\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) dest.emit('error', er);\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest, 'error', onerror);\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function () {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = { hasUnpiped: false };\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0) return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n\n    if (!dest) dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++) {\n      dests[i].emit('unpipe', this, { hasUnpiped: false });\n    }return this;\n  }\n\n  // try to find the right one.\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n\n  dest.emit('unpipe', this, unpipeInfo);\n\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n\n  if (ev === 'data') {\n    // Start flowing on next tick if stream isn't explicitly paused\n    if (this._readableState.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    var state = this._readableState;\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.emittedReadable = false;\n      if (!state.reading) {\n        pna.nextTick(nReadingNextTick, this);\n      } else if (state.length) {\n        emitReadable(this);\n      }\n    }\n  }\n\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    state.flowing = true;\n    resume(this, state);\n  }\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    pna.nextTick(resume_, stream, state);\n  }\n}\n\nfunction resume_(stream, state) {\n  if (!state.reading) {\n    debug('resume read 0');\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  state.awaitDrain = 0;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\n\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (false !== this._readableState.flowing) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  while (state.flowing && stream.read() !== null) {}\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n\n  var state = this._readableState;\n  var paused = false;\n\n  stream.on('end', function () {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n\n    _this.push(null);\n  });\n\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\n    var ret = _this.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function (method) {\n        return function () {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  }\n\n  // proxy certain important events.\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  }\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  this._read = function (n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return this;\n};\n\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._readableState.highWaterMark;\n  }\n});\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = fromListPartial(n, state.buffer, state.decoder);\n  }\n\n  return ret;\n}\n\n// Extracts only enough buffered data to satisfy the amount requested.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromListPartial(n, list, hasStrings) {\n  var ret;\n  if (n < list.head.data.length) {\n    // slice is the same for buffers and strings\n    ret = list.head.data.slice(0, n);\n    list.head.data = list.head.data.slice(n);\n  } else if (n === list.head.data.length) {\n    // first chunk is a perfect match\n    ret = list.shift();\n  } else {\n    // result spans more than one buffer\n    ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);\n  }\n  return ret;\n}\n\n// Copies a specified amount of characters from the list of buffered data\n// chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBufferString(n, list) {\n  var p = list.head;\n  var c = 1;\n  var ret = p.data;\n  n -= ret.length;\n  while (p = p.next) {\n    var str = p.data;\n    var nb = n > str.length ? str.length : n;\n    if (nb === str.length) ret += str;else ret += str.slice(0, n);\n    n -= nb;\n    if (n === 0) {\n      if (nb === str.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = str.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\n// Copies a specified amount of bytes from the list of buffered data chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBuffer(n, list) {\n  var ret = Buffer.allocUnsafe(n);\n  var p = list.head;\n  var c = 1;\n  p.data.copy(ret);\n  n -= p.data.length;\n  while (p = p.next) {\n    var buf = p.data;\n    var nb = n > buf.length ? buf.length : n;\n    buf.copy(ret, ret.length - n, 0, nb);\n    n -= nb;\n    if (n === 0) {\n      if (nb === buf.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = buf.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n\n  // If we get here before consuming all the bytes, then that is a\n  // bug in node.  Should never happen.\n  if (state.length > 0) throw new Error('\"endReadable()\" called on non-empty stream');\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    pna.nextTick(endReadableNT, state, stream);\n  }\n}\n\nfunction endReadableNT(state, stream) {\n  // Check that we didn't get one last unshift.\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n  }\n}\n\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n'use strict';\n\nmodule.exports = PassThrough;\n\nvar Transform = require('./_stream_transform');\n\n/*<replacement>*/\nvar util = Object.create(require('core-util-is'));\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};","module.exports = require('events').EventEmitter;\n"],"names":["pna","require","objectKeys","Object","keys","obj","key","push","module","exports","Duplex","util","create","inherits","Readable","Writable","prototype","v","length","method","options","this","call","readable","writable","allowHalfOpen","once","onend","_writableState","ended","nextTick","onEndNT","self","end","defineProperty","enumerable","get","highWaterMark","undefined","_readableState","destroyed","set","value","_destroy","err","cb","objectToString","o","toString","isArray","arg","Array","isBoolean","isNull","isNullOrUndefined","isNumber","isString","isSymbol","isUndefined","isRegExp","re","isObject","isDate","d","isError","e","Error","isFunction","isPrimitive","isBuffer","process","version","indexOf","fn","arg1","arg2","arg3","TypeError","args","i","len","arguments","apply","Stream","Transform","PassThrough","emitErrorNT","emit","destroy","_this","readableDestroyed","writableDestroyed","errorEmitted","undestroy","reading","endEmitted","ending","finalCalled","prefinished","finished","afterTransform","er","data","ts","_transformState","transforming","writecb","writechunk","rs","needReadable","_read","bind","needTransform","writeencoding","sync","transform","_transform","flush","_flush","on","prefinish","done","stream","chunk","encoding","_write","n","_this2","err2","arr","CorkedRequest","state","next","entry","finish","corkReq","callback","pendingcb","corkedRequestsFree","onCorkedFinish","asyncWrite","browser","slice","setImmediate","WritableState","internalUtil","deprecate","Buffer","OurUint8Array","global","window","Uint8Array","realHasInstance","destroyImpl","nop","isDuplex","objectMode","writableObjectMode","hwm","writableHwm","writableHighWaterMark","defaultHwm","Math","floor","needDrain","noDecode","decodeStrings","defaultEncoding","writing","corked","bufferProcessing","onwrite","writelen","onwriteStateUpdate","finishMaybe","onwriteError","needFinish","bufferedRequest","clearBuffer","afterWrite","lastBufferedRequest","bufferedRequestCount","write","writev","_writev","final","_final","doWrite","onwriteDrain","l","buffer","holder","count","allBuffers","isBuf","callFinal","need","getBuffer","current","out","_","Symbol","hasInstance","Function","object","pipe","ret","from","_uint8ArrayToBuffer","writeAfterEnd","valid","validChunk","newChunk","decodeChunk","last","writeOrBuffer","cork","uncork","setDefaultEncoding","toLowerCase","endWritable","_undestroy","BufferList","instance","Constructor","_classCallCheck","head","tail","unshift","shift","clear","join","s","p","concat","alloc","src","target","offset","allocUnsafe","copy","inspect","custom","constructor","name","copyProps","dst","SafeBuffer","encodingOrOffset","allocUnsafeSlow","size","fill","buf","SlowBuffer","ReadableState","EElistenerCount","emitter","type","listeners","debugUtil","debug","debuglog","StringDecoder","kProxyEvents","readableObjectMode","readableHwm","readableHighWaterMark","pipes","pipesCount","flowing","emittedReadable","readableListening","resumeScheduled","awaitDrain","readingMore","decoder","read","readableAddChunk","addToFront","skipChunkCheck","emitReadable","onEofChunk","chunkInvalid","getPrototypeOf","addChunk","maybeReadMore","needMoreData","isPaused","setEncoding","enc","MAX_HWM","howMuchToRead","computeNewHighWaterMark","emitReadable_","flow","maybeReadMore_","nReadingNextTick","resume_","fromList","list","hasStrings","c","str","nb","copyFromBufferString","copyFromBuffer","fromListPartial","endReadable","endReadableNT","xs","x","parseInt","nOrig","doRead","dest","pipeOpts","endFn","stdout","stderr","unpipe","onunpipe","unpipeInfo","hasUnpiped","removeListener","onclose","onfinish","ondrain","onerror","ondata","cleanedUp","pipeOnDrain","increasedAwaitDrain","pause","event","prependListener","_events","resume","dests","index","splice","ev","res","addListener","wrap","paused","_fromList"],"sourceRoot":""}