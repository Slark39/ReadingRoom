{"version":3,"file":"static/js/3696.6eeac755.chunk.js","mappings":"gLAUaA,EAAb,SAAAC,G,QAQE,SAAAD,EAAAE,G,MAAcC,EAAAD,EAAAC,Q,IAASC,YAAAA,OAAA,IAAAC,EAAc,CAAC,EAADA,E,IAAIC,mBAAAA,OAAA,IAAAC,EAAqB,CAAC,EAADA,E,IAAIC,aAAAA,OAAA,IAAAC,EAAe,CAAC,EAADA,E,OAC/EC,EAAAT,EAAAU,KAAA,KAAM,CAAEC,kBAAmB,CAACT,MAA5B,MAEKA,QAAUA,EACfO,EAAKN,YAAcA,EACnBM,EAAKJ,mBAAqBA,EAC1BI,EAAKF,aAAeA,E,CACrB,C,EAfHP,G,EAAAD,G,6EAAA,IAAAa,EAAAb,EAAAc,UAAA,OAAAD,EAiBeE,SAjBf,e,wCAwB0BC,EAAKC,MAAMC,MAAMF,EAAKR,cAAcW,MAAK,SAACC,GAAD,OAAgCA,EAAS,EAAzC,KAAzCD,MAAA,SAAhBE,GAEN,MAAO,CAAEC,SAAUN,EAAKC,MAAMK,SAAUD,QAAAA,E,OARnCE,K,iBAAAP,EAAKC,M,uBACY,8HAAiCE,MAAK,SAAAK,GAAC,IAAAC,EAAA,cAAAA,EAAA,MAAID,OAAJ,EAAIA,EAAC,SAALC,EAAkBD,CAAlB,KAAvCL,MAAA,SAAdO,G,OACNV,EAAKC,MAAQ,IAAIS,EAAMV,EAAKV,oB,gBACtBU,EAAKC,MAAMU,KAAKX,EAAKZ,cAArBe,MAAA,c,sDAMT,CA3BH,MAAAS,GAAA,OAAAC,QAAAC,OAAAF,EAAA,GAAAf,EA6BekB,YA7Bf,eA8BI,OAAAF,QAAAG,QAAOT,KAAKN,MAAMK,SACnB,CA/BH,MAAAM,GAAA,OAAAC,QAAAC,OAAAF,EAAA,GAAAf,EAiCeoB,WAjCf,eAkCI,OAAAJ,QAAAG,QAAOT,KAAKpB,QACb,CAnCH,MAAAyB,GAAA,OAAAC,QAAAC,OAAAF,EAAA,GAAAf,EAqCeqB,WArCf,eAsCI,OAAAL,QAAAG,QAAOT,KAAKN,MAAMkB,SAASC,KAAK,gBAAgBjB,MAAK,SAACC,GAAD,OAAgCA,EAAS,EAAzC,IACtD,CAvCH,MAAAQ,GAAA,OAAAC,QAAAC,OAAAF,EAAA,GAAAf,EAyCewB,WAzCf,W,wBAyC8B,EAzC9BxB,EA2CeyB,MA3Cf,e,MA4CUf,K,uBAAAgB,EAAKtB,MAAMuB,WAAXrB,MAAA,WACNoB,EAAKE,gB,GACN,CA9CH,MAAAb,GAAA,OAAAC,QAAAC,OAAAF,EAAA,GAAA5B,CAAA,E,SAAoC0C,E","sources":["../node_modules/use-wallet/node_modules/@web3-react/torus-connector/src/index.ts"],"sourcesContent":["import { ConnectorUpdate } from '@web3-react/types'\nimport { AbstractConnector } from '@web3-react/abstract-connector'\n\ninterface TorusConnectorArguments {\n  chainId: number\n  initOptions?: any\n  constructorOptions?: any\n  loginOptions?: any\n}\n\nexport class TorusConnector extends AbstractConnector {\n  private readonly chainId: number\n  private readonly initOptions: any\n  private readonly constructorOptions: any\n  private readonly loginOptions: any\n\n  public torus: any\n\n  constructor({ chainId, initOptions = {}, constructorOptions = {}, loginOptions = {} }: TorusConnectorArguments) {\n    super({ supportedChainIds: [chainId] })\n\n    this.chainId = chainId\n    this.initOptions = initOptions\n    this.constructorOptions = constructorOptions\n    this.loginOptions = loginOptions\n  }\n\n  public async activate(): Promise<ConnectorUpdate> {\n    if (!this.torus) {\n      const Torus = await import('@toruslabs/torus-embed').then(m => m?.default ?? m)\n      this.torus = new Torus(this.constructorOptions)\n      await this.torus.init(this.initOptions)\n    }\n\n    const account = await this.torus.login(this.loginOptions).then((accounts: string[]): string => accounts[0])\n\n    return { provider: this.torus.provider, account }\n  }\n\n  public async getProvider(): Promise<any> {\n    return this.torus.provider\n  }\n\n  public async getChainId(): Promise<number | string> {\n    return this.chainId\n  }\n\n  public async getAccount(): Promise<null | string> {\n    return this.torus.ethereum.send('eth_accounts').then((accounts: string[]): string => accounts[0])\n  }\n\n  public async deactivate() {}\n\n  public async close() {\n    await this.torus.cleanUp()\n    this.emitDeactivate()\n  }\n}\n"],"names":["TorusConnector","_AbstractConnector","_ref","chainId","initOptions","_ref$initOptions","constructorOptions","_ref$constructorOptio","loginOptions","_ref$loginOptions","_this","call","supportedChainIds","_proto","prototype","activate","_this3","torus","login","then","accounts","account","provider","this","m","_m$default","Torus","init","e","Promise","reject","getProvider","resolve","getChainId","getAccount","ethereum","send","deactivate","close","_this11","cleanUp","emitDeactivate","AbstractConnector"],"sourceRoot":""}